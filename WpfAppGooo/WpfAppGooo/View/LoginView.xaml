<Window
    x:Class="WpfAppGooo.View.LoginView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ViewModel="clr-namespace:WpfAppGooo.ViewModel" xmlns:common="clr-namespace:WpfAppGooo.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:WpfAppGooo.View"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" x:Name="window" Title="系统登录"
    Width="360" Height="600" AllowsTransparency="True"
    Background="{x:Null}"
    FontFamily="Microsoft YaHei" FontWeight="ExtraLight" ResizeMode="NoResize"
    WindowStartupLocation="CenterScreen" WindowStyle="None" mc:Ignorable="d">
    <Window.Resources>
        <ResourceDictionary Source="../Assets/Styles/DefultStyle.xaml">
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary>
                    <ControlTemplate x:Key="LoginButtonTemplate" TargetType="{x:Type Button}">
                        <Border Background="#007DFA" CornerRadius="5">
                            <Grid>
                                <Border x:Name="Back" Background="#22FFFFFF" CornerRadius="4" Visibility="Hidden" />
                                <ContentControl HorizontalAlignment="Center" VerticalAlignment="Center" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Back" Property="Visibility" Value="Visible" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                    <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3" />
                    <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA" />
                    <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5" />
                    <Style x:Key="UserNameTextBoxStyle" TargetType="{x:Type TextBox}">
                        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
                        <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}" />
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                        <Setter Property="BorderThickness" Value="1" />
                        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
                        <Setter Property="HorizontalContentAlignment" Value="Left" />
                        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                        <Setter Property="AllowDrop" Value="true" />
                        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
                        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TextBox}">
                                    <Border
                                        x:Name="border"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="5" SnapsToDevicePixels="True">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="40" />
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>
                                            <TextBlock
                                                HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="../Assets/Fonts/#iconfont"
                                                FontSize="20" Foreground="#ddd" Text="&#xE65F;" />
                                            <ScrollViewer
                                                x:Name="PART_ContentHost" Grid.Column="1" MinHeight="20" VerticalAlignment="Center"
                                                Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" />
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter TargetName="border" Property="Opacity" Value="0.56" />
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource TextBox.MouseOver.Border}" />
                                        </Trigger>
                                        <Trigger Property="IsKeyboardFocused" Value="true">
                                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource TextBox.Focus.Border}" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true" />
                                    <Condition Property="IsSelectionActive" Value="false" />
                                </MultiTrigger.Conditions>
                                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
                            </MultiTrigger>
                        </Style.Triggers>
                    </Style>
                    <Style x:Key="PasswordBoxStyle" TargetType="{x:Type PasswordBox}">
                        <Setter Property="PasswordChar" Value="●" />
                        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
                        <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}" />
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                        <Setter Property="BorderThickness" Value="1" />
                        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
                        <Setter Property="HorizontalContentAlignment" Value="Left" />
                        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                        <Setter Property="AllowDrop" Value="true" />
                        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
                        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type PasswordBox}">
                                    <Border
                                        x:Name="border"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="5" SnapsToDevicePixels="True">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="40" />
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>
                                            <TextBlock
                                                HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="../Assets/Fonts/#iconfont"
                                                FontSize="20" Foreground="#ddd" Text="&#xE608;" />
                                            <ScrollViewer
                                                x:Name="PART_ContentHost" Grid.Column="1" MinHeight="20" VerticalAlignment="Center"
                                                Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" />
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter TargetName="border" Property="Opacity" Value="0.56" />
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource TextBox.MouseOver.Border}" />
                                        </Trigger>
                                        <Trigger Property="IsKeyboardFocused" Value="true">
                                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource TextBox.Focus.Border}" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true" />
                                    <Condition Property="IsSelectionActive" Value="false" />
                                </MultiTrigger.Conditions>
                                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
                            </MultiTrigger>
                        </Style.Triggers>
                    </Style>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <Window.DataContext>
        <ViewModel:LoginViewModel />
    </Window.DataContext>
    <Border Margin="5" Background="White" CornerRadius="10">
        <Border.Effect>
            <DropShadowEffect
                BlurRadius="5" Direction="0" Opacity="0.3" ShadowDepth="0" Color="Gray" />
        </Border.Effect>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="350" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="1.8*" />
                <RowDefinition Height="3*" />
                <RowDefinition Height="100" />
            </Grid.RowDefinitions>
            <Border Grid.Row="0" Background="#007DFA" CornerRadius="10,10,0,0" MouseLeftButtonDown="UIElement_OnMouseLeftButtonDown" />
            <Button
                Grid.Row="0" Margin="265,0,45,0" VerticalAlignment="Top"
                Command="{Binding MinWindowCommand}"
                CommandParameter="{Binding ElementName=window}"
                Content="&#xeadb;"
                Style="{StaticResource WindowControlButtonStyle}" />
            <Button
                Grid.Row="0" HorizontalAlignment="Right" VerticalAlignment="Top"
                Command="{Binding CloseWindowCommand}"
                CommandParameter="{Binding ElementName=window}"
                Content="&#xe635;"
                Style="{StaticResource WindowControlButtonStyle}" />
            <StackPanel Grid.Row="0" Margin="0,0,0,30" VerticalAlignment="Bottom">
                <Border
                    Width="90" Height="90" Margin="0,0,0,10" HorizontalAlignment="Center" VerticalAlignment="Center"
                    Background="#007DFA" CornerRadius="50">
                    <Border.Effect>
                        <DropShadowEffect
                            BlurRadius="5" Direction="0" Opacity="0.3" ShadowDepth="0" Color="White" />
                    </Border.Effect>
                    <Border Width="70" Height="70" HorizontalAlignment="Center">
                        <Border.Background>
                            <ImageBrush ImageSource="../Assets/Images/qht.png" />
                        </Border.Background>
                    </Border>
                </Border>
                <TextBlock
                    HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="18" Foreground="White"
                    Text="哈哈哈哈哈哈" />
            </StackPanel>
            <Border Grid.Row="1" Grid.RowSpan="2" Background="Transparent" Visibility="{Binding ShowProgress}">
                <ProgressBar
                    Height="3" VerticalAlignment="Top" Background="Transparent" BorderThickness="0" Foreground="Orange"
                    IsIndeterminate="True" />
            </Border>
            <Grid Grid.Row="1" Margin="20,10" FocusManager.FocusedElement="{Binding ElementName=TxtUserName}" Visibility="{Binding ShowBeforeSuccess}">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition Height="Auto" MinHeight="23" />
                </Grid.RowDefinitions>
                <TextBox
                    Name="TxtUserName" Height="40" FontSize="16" Foreground="#ddd"
                    Style="{DynamicResource UserNameTextBoxStyle}"
                    Text="{Binding LoginModel.UserName}">
                    <TextBox.InputBindings>
                        <KeyBinding Key="Enter" Command="{Binding LoginCommand}" CommandParameter="{Binding ElementName=window}" />
                    </TextBox.InputBindings>
                </TextBox>
                <PasswordBox
                    Grid.Row="1" Height="40" common:PasswordHelper.Attach="True"
                    common:PasswordHelper.Password="{Binding LoginModel.Password, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    FontSize="16"
                    Style="{DynamicResource PasswordBoxStyle}">
                    <PasswordBox.InputBindings>
                        <KeyBinding Key="Enter" Command="{Binding LoginCommand}" CommandParameter="{Binding ElementName=window}" />
                    </PasswordBox.InputBindings>
                </PasswordBox>
                <TextBox Grid.Row="2" Height="40" Text="{Binding LoginModel.ValidationCode}">
                    <TextBox.InputBindings>
                        <KeyBinding Key="Enter" Command="{Binding LoginCommand}" CommandParameter="{Binding ElementName=window}" />
                    </TextBox.InputBindings>
                </TextBox>
                <Button
                    Grid.Row="3" Height="40"
                    Command="{Binding LoginCommand}"
                    CommandParameter="{Binding ElementName=window}"
                    Content="登  录" FontSize="16" Foreground="White"
                    Template="{StaticResource ResourceKey=LoginButtonTemplate}" />
                <TextBlock
                    Grid.Row="4" HorizontalAlignment="Center" VerticalAlignment="Center"
                    FontFamily="../Assets/Fonts/#iconfont" FontSize="15" Foreground="Red"
                    Text="{Binding ErrorMessage}"
                    TextWrapping="Wrap" />
            </Grid>

            <Grid Grid.Row="1" Margin="20,10" Visibility="{Binding ShowSuccess}">
                <TextBlock
                    Margin="0,0,0,10" HorizontalAlignment="Center" VerticalAlignment="Bottom" FontSize="20"
                    Text="登陆成功，正在连接服务器..." />
                <Border Background="Transparent">
                    <ProgressBar
                        Height="3" VerticalAlignment="Bottom" Background="Transparent" BorderThickness="0" Foreground="Red"
                        IsIndeterminate="True" />
                </Border>
            </Grid>
            <Grid Grid.Row="2" Margin="20,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="20" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="30" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Border VerticalAlignment="Center" BorderBrush="#ddd" BorderThickness="0,0,0,1" />
                    <TextBlock
                        Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="#ccc" Text="OR" />
                    <Border Grid.Column="2" VerticalAlignment="Center" BorderBrush="#ddd" BorderThickness="0,0,0,1" />
                </Grid>
                <UniformGrid Grid.Row="1" Columns="5">
                    <UniformGrid.Resources>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Foreground" Value="#ddd" />
                            <Setter Property="FontSize" Value="60" />
                            <Setter Property="VerticalAlignment" Value="Center" />
                            <Setter Property="HorizontalAlignment" Value="Center" />
                            <Setter Property="FontFamily" Value="../Assets/Fonts/#iconfont" />
                            <Setter Property="IsEnabled" Value="{Binding FontsValue}" />
                            <Style.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True" />
                                        <Condition Property="IsEnabled" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Foreground" Value="Blue" />
                                </MultiTrigger>
                            </Style.Triggers>
                        </Style>
                    </UniformGrid.Resources>
                    <TextBlock Text="&#xE65E;" />
                    <TextBlock Text="&#xE625;" />
                    <TextBlock Text="&#xE61F;" />
                    <TextBlock Text="&#xE64E;" />
                    <TextBlock Text="&#xE606;">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="Foreground" Value="#ddd" />
                                <Setter Property="FontSize" Value="60" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="HorizontalAlignment" Value="Center" />
                                <Setter Property="FontFamily" Value="../Assets/Fonts/#iconfont" />
                                <Setter Property="IsEnabled" Value="{Binding FontsValue}" />
                                <Style.Triggers>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsMouseOver" Value="True" />
                                            <Condition Property="IsEnabled" Value="True" />
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Foreground" Value="Red" />
                                    </MultiTrigger>
                                    <!-- <Trigger Property="IsMouseOver" Value="True"> -->
                                    <!--     <Setter Property="Foreground" Value="Red"></Setter> -->
                                    <!-- </Trigger> -->
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </UniformGrid>
            </Grid>

        </Grid>
    </Border>
</Window>
